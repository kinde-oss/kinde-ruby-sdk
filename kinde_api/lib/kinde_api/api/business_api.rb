# frozen_string_literal: true

# #Kinde Management API
#
# Provides endpoints to manage your Kinde Businesses
#
# The version of the OpenAPI document: 1
# Contact: support@kinde.com
# Generated by: https://openapi-generator.tech
# OpenAPI Generator version: 7.0.0-SNAPSHOT
#

require 'cgi'

module KindeApi
  class BusinessApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end

    # List business details
    # Get your business details.
    # @param code [String] Business code.
    # @param name [String] Business name.
    # @param email [String] Email associated with business.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :phone Phone number associated with business.
    # @option opts [String] :industry The industry your business is in.
    # @option opts [String] :timezone The timezone your business is in.
    # @option opts [String] :privacy_url Your Privacy policy URL.
    # @option opts [String] :terms_url Your Terms and Conditions URL.
    # @return [SuccessResponse]
    def get_business(code, name, email, opts = {})
      data, _status_code, _headers = get_business_with_http_info(code, name, email, opts)
      data
    end

    # List business details
    # Get your business details.
    # @param code [String] Business code.
    # @param name [String] Business name.
    # @param email [String] Email associated with business.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :phone Phone number associated with business.
    # @option opts [String] :industry The industry your business is in.
    # @option opts [String] :timezone The timezone your business is in.
    # @option opts [String] :privacy_url Your Privacy policy URL.
    # @option opts [String] :terms_url Your Terms and Conditions URL.
    # @return [Array<(SuccessResponse, Integer, Hash)>] SuccessResponse data, response status code and response headers
    def get_business_with_http_info(code, name, email, opts = {})
      @api_client.config.logger.debug 'Calling API: BusinessApi.get_business ...' if @api_client.config.debugging
      # verify the required parameter 'code' is set
      if @api_client.config.client_side_validation && code.nil?
        raise ArgumentError, "Missing the required parameter 'code' when calling BusinessApi.get_business"
      end
      # verify the required parameter 'name' is set
      if @api_client.config.client_side_validation && name.nil?
        raise ArgumentError, "Missing the required parameter 'name' when calling BusinessApi.get_business"
      end
      # verify the required parameter 'email' is set
      if @api_client.config.client_side_validation && email.nil?
        raise ArgumentError, "Missing the required parameter 'email' when calling BusinessApi.get_business"
      end

      # resource path
      local_var_path = '/api/v1/business'

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:code] = code
      query_params[:name] = name
      query_params[:email] = email
      query_params[:phone] = opts[:phone] unless opts[:phone].nil?
      query_params[:industry] = opts[:industry] unless opts[:industry].nil?
      query_params[:timezone] = opts[:timezone] unless opts[:timezone].nil?
      query_params[:privacy_url] = opts[:privacy_url] unless opts[:privacy_url].nil?
      query_params[:terms_url] = opts[:terms_url] unless opts[:terms_url].nil?

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json; charset=utf-8'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || 'SuccessResponse'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['kindeBearerAuth']

      new_options = opts.merge(
        operation: :"BusinessApi.get_business",
        header_params: header_params,
        query_params: query_params,
        form_params: form_params,
        body: post_body,
        auth_names: auth_names,
        return_type: return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: BusinessApi#get_business\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      [data, status_code, headers]
    end

    # Update business details
    # Update business details.
    # @param business_name [String] Business name.
    # @param primary_email [String] Email associated with business.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :primary_phone Phone number associated with business.
    # @option opts [String] :industry_key The key of the industry your business is in.
    # @option opts [String] :timezone_id The ID of the timezone your business is in.
    # @option opts [String] :privacy_url Your Privacy policy URL.
    # @option opts [String] :terms_url Your Terms and Conditions URL.
    # @option opts [String] :is_show_kinde_branding Display \&quot;Powered by Kinde\&quot; on your sign up, sign in, and subscription pages.
    # @option opts [Boolean] :is_click_wrap Show a policy acceptance checkbox on sign up.
    # @option opts [String] :partner_code Your Kinde Perk code.
    # @return [SuccessResponse]
    def update_business(business_name, primary_email, opts = {})
      data, _status_code, _headers = update_business_with_http_info(business_name, primary_email, opts)
      data
    end

    # Update business details
    # Update business details.
    # @param business_name [String] Business name.
    # @param primary_email [String] Email associated with business.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :primary_phone Phone number associated with business.
    # @option opts [String] :industry_key The key of the industry your business is in.
    # @option opts [String] :timezone_id The ID of the timezone your business is in.
    # @option opts [String] :privacy_url Your Privacy policy URL.
    # @option opts [String] :terms_url Your Terms and Conditions URL.
    # @option opts [String] :is_show_kinde_branding Display \&quot;Powered by Kinde\&quot; on your sign up, sign in, and subscription pages.
    # @option opts [Boolean] :is_click_wrap Show a policy acceptance checkbox on sign up.
    # @option opts [String] :partner_code Your Kinde Perk code.
    # @return [Array<(SuccessResponse, Integer, Hash)>] SuccessResponse data, response status code and response headers
    def update_business_with_http_info(business_name, primary_email, opts = {})
      @api_client.config.logger.debug 'Calling API: BusinessApi.update_business ...' if @api_client.config.debugging
      # verify the required parameter 'business_name' is set
      if @api_client.config.client_side_validation && business_name.nil?
        raise ArgumentError, "Missing the required parameter 'business_name' when calling BusinessApi.update_business"
      end
      # verify the required parameter 'primary_email' is set
      if @api_client.config.client_side_validation && primary_email.nil?
        raise ArgumentError, "Missing the required parameter 'primary_email' when calling BusinessApi.update_business"
      end

      # resource path
      local_var_path = '/api/v1/business'

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:business_name] = business_name
      query_params[:primary_email] = primary_email
      query_params[:primary_phone] = opts[:primary_phone] unless opts[:primary_phone].nil?
      query_params[:industry_key] = opts[:industry_key] unless opts[:industry_key].nil?
      query_params[:timezone_id] = opts[:timezone_id] unless opts[:timezone_id].nil?
      query_params[:privacy_url] = opts[:privacy_url] unless opts[:privacy_url].nil?
      query_params[:terms_url] = opts[:terms_url] unless opts[:terms_url].nil?
      unless opts[:is_show_kinde_branding].nil?
        query_params[:is_show_kinde_branding] =
          opts[:is_show_kinde_branding]
      end
      query_params[:is_click_wrap] = opts[:is_click_wrap] unless opts[:is_click_wrap].nil?
      query_params[:partner_code] = opts[:partner_code] unless opts[:partner_code].nil?

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json; charset=utf-8'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || 'SuccessResponse'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['kindeBearerAuth']

      new_options = opts.merge(
        operation: :"BusinessApi.update_business",
        header_params: header_params,
        query_params: query_params,
        form_params: form_params,
        body: post_body,
        auth_names: auth_names,
        return_type: return_type
      )

      data, status_code, headers = @api_client.call_api(:PATCH, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: BusinessApi#update_business\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      [data, status_code, headers]
    end
  end
end
