# frozen_string_literal: true

# #Kinde Management API
#
# Provides endpoints to manage your Kinde Businesses
#
# The version of the OpenAPI document: 1
# Contact: support@kinde.com
# Generated by: https://openapi-generator.tech
# OpenAPI Generator version: 7.0.0-SNAPSHOT
#

require 'cgi'

module KindeApi
  class IndustriesApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end

    # List industries and industry keys.
    # Get a list of industries and associated industry keys.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :industry_key Industry Key.
    # @option opts [String] :name Industry name.
    # @return [SuccessResponse]
    def get_industries(opts = {})
      data, _status_code, _headers = get_industries_with_http_info(opts)
      data
    end

    # List industries and industry keys.
    # Get a list of industries and associated industry keys.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :industry_key Industry Key.
    # @option opts [String] :name Industry name.
    # @return [Array<(SuccessResponse, Integer, Hash)>] SuccessResponse data, response status code and response headers
    def get_industries_with_http_info(opts = {})
      @api_client.config.logger.debug 'Calling API: IndustriesApi.get_industries ...' if @api_client.config.debugging
      # resource path
      local_var_path = '/api/v1/industries'

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:industry_key] = opts[:industry_key] unless opts[:industry_key].nil?
      query_params[:name] = opts[:name] unless opts[:name].nil?

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json; charset=utf-8'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || 'SuccessResponse'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['kindeBearerAuth']

      new_options = opts.merge(
        operation: :"IndustriesApi.get_industries",
        header_params: header_params,
        query_params: query_params,
        form_params: form_params,
        body: post_body,
        auth_names: auth_names,
        return_type: return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: IndustriesApi#get_industries\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      [data, status_code, headers]
    end
  end
end
